/*
 * Dalek.h
 *
 *  Created on: 23/05/2013
 *      Author: roger
 */

#ifndef MENU_H_
#define MENU_H_

#include "AppRegistry.h"

//#define DEBUG_DALEK
#define RADIUS 16
#define DALEK_COUNT 5
#define SENSITIVITY 100

static uint16_t smallDalek[] PROGMEM = {
	0x0000,0x0000,0x0000,0x0841,0xffc2,0xffc2,0xffc2,0x0000,0x0000,0x0000,0x838e,0x0841,0x0000,0x0000,
	0x0000,0x0000,0x0000,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0x838e,0x1082,0x0000,0x0000,
	0x0000,0x0000,0x0000,0xffc2,0x0841,0x0841,0x0841,0xffc2,0x0000,0x0000,0x838e,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0xffc2,0x0841,0x0841,0x0841,0xffc2,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0x0000,0x0000,0x0000,0x0000,0x0000,0x838e,
	0x0000,0x0000,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0x838e,
	0x0000,0x0000,0xffc2,0x0841,0xffc2,0x0841,0xffc2,0x0841,0xffc2,0x0000,0x0000,0x0000,0x0000,0x838e,
	0x0000,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x1082,0xffc2,0x0841,0xffc2,0xffc2,0x0841,0xffc2,0x0841,0xffc2,0xffc2,0x0000,0x0000,0x0000,0x0000,
	0x0000,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0x1082,0x0000,0x0000,0x0000,
	0x0000,0xffc2,0x0841,0xffc2,0xffc2,0x0841,0xffc2,0x0841,0xffc2,0xffc2,0x0841,0x0000,0x0000,0x0000,
	0xffc2,0xffc2,0x0841,0xffc2,0xffc2,0x0841,0xffc2,0x0841,0xffc2,0xffc2,0xffc2,0x0000,0x0000,0x0000,
	0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0xffc2,0x0000,0x0000,0x0000,0x0};

class DalekInstance {

public:
	int m_x;
	int m_y;
	Icon *m_icon;
	unsigned long m_t;
	DalekInstance(int x, int y, unsigned long t, Icon *icon) {
		m_x = x;
		m_y = y;
		m_t = t + micros();
		m_icon = icon;
		draw();
	}
	void draw() {
		m_icon->draw(m_x, m_y);
//		Hardware.drawIcon(14,m_x, m_y, &header_data[0]);
	}
	void erase() {
		Graphics.fillCircle(m_x + 7, m_y + 7, 10, BLACK);
		Graphics.setCursor(0, 0);
	}
	unsigned long getVanishTime() {
		return m_t;
	}
};

class Dalek: public App {
private:
	uint16_t m_cx;
	uint16_t m_cy;
	uint16_t m_height;
	uint16_t m_width;
	int circleSize;
	DalekInstance *daleks[DALEK_COUNT];
	int currentColour;
	int lastx = 0;
	Icon m_smallIcon = Icon(14,smallDalek);

public:
	Dalek();
	virtual unsigned long getUpdateInterval() {
		return 100000UL;
	};
	virtual void setup();
	virtual void init();
	virtual void display();
	virtual const char* getName() {
		return PSTR("Dalek");
	};

	virtual ~Dalek();
};

#endif /* MENU_H_ */
