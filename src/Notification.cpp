/*
 * Notification.cpp
 *
 *  Created on: 28/04/2013
 *      Author: roger
 */

#include "Notification.h"

static uint16_t myicon[] PROGMEM = {
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0800,0xf4c1,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x1040,0x61c0,0xf780,0x3940,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x4140,0xf4c1,0xf780,0xf4c1,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf4c1,0xf780,0xf780,0xf780,0xf4c1,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf4c1,0xf780,0xf780,0xf780,0xf4c1,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf780,0xf780,0xf780,0xf780,0xf780,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf780,0xf780,0xf780,0xf780,0xf780,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf780,0xf780,0xf780,0xf780,0xf780,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf780,0xf780,0xf780,0xf780,0xf780,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf780,0xf780,0xf780,0xf780,0xf780,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf780,0xf780,0xf780,0xf780,0xf780,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf780,0xf780,0xf780,0xf780,0xf780,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf4c1,0xf780,0xf780,0xf780,0xf4c1,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf4c1,0xf780,0xf780,0xf780,0xf4c1,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf780,0xf780,0xf780,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf4c1,0xf780,0xf4c1,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf4c1,0xf780,0xf4c1,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf780,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf780,0x1040,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf4c1,0x1040,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xf4c1,0xf780,0xf4c1,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x20c0,0xf780,0xf780,0xf780,0x4980,0x1040,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0800,0xf4c1,0xf780,0xf4c1,0x1040,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
		0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000};

const char *appname = PSTR("Notification");

Notification::Notification(): App() {
	// Keep the constructor empty and do most things in the init()
	m_rootNotificationInstance = NULL;
}
void Notification::init() {
#ifdef NOTIFICATION_DEBUG
	Serial.println(PSTR("Notification::init()"));
#endif
//	m_icon = new Icon(28,&Notification_bitmap[0]);
	m_icon = new Icon(28,myicon);
	m_rootNotificationInstance = NULL;
	count=0;
}
const char* Notification::getName() {return appname;};

void Notification::setup() {
#ifdef NOTIFICATION_DEBUG
	Serial.println(PSTR("Notification::setup()"));
#endif
	Graphics.fillScreen(BLACK);
	Graphics.setRotation(3);
	Graphics.setCursor(0,Graphics.height()-10);
//#ifdef NOTIFICATION_DEBUG
//		Serial.println("Displaying notifications...");
//#endif
	Graphics.fillScreen(BLACK);
	Graphics.setRotation(3);
	Graphics.setTextSize(2);
	Graphics.setCursor(0,0);
	NotificationInstance *n = m_rootNotificationInstance;
	if (count == 0) {
		Graphics.println("No notifications");
		return;
	}
//	Graphics.print(count);
//	Graphics.println(" notifications");
	while (n != NULL) {
//#ifdef NOTIFICATION_DEBUG
//		Serial.println(latest->m_content->c_str());
//#endif
		Graphics.printf(PSTR("%02d:%02d "),hour(n->m_timeStamp),minute(n->m_timeStamp));
		Graphics.println(n->m_content->c_str());
		n = n->m_next;
	}
	m_icon->reverse(false);
}

const Icon *Notification::getIcon() {
	return m_icon;
};

void Notification::notify(const char *s) {
	setup();
};
void Notification::addMessage(const char *s) {
#ifdef NOTIFICATION_DEBUG
	Serial.print("Notification::addMessage...[");
	Serial.print(s);
	Serial.println("]");
#endif
	NotificationInstance *latest;
	if (m_rootNotificationInstance == NULL) {
		m_rootNotificationInstance = new NotificationInstance(s);
		latest = m_rootNotificationInstance;
	} else {
		NotificationInstance *n = findLastNotification(m_rootNotificationInstance);
		latest = new NotificationInstance(s,n);
	}
	count++;
	while (count > MAX_NOTIFICATIONS) {
		NotificationInstance *next = m_rootNotificationInstance->m_next;
		delete m_rootNotificationInstance;
		m_rootNotificationInstance = next;
		count--;
	}
	m_icon->reverse(true);
	Appregistry.getCurrentApp()->notify(s);// This tells the menu to redraw (if the current app is the menu) most apps ignore notify().
	Hardware.blink0();
	Hardware.siren();
};

void Notification::deleteLastNotification(NotificationInstance *n) {
#ifdef NOTIFICATION_DEBUG
	Serial.println("Notification::deleteLastNotification...");
#endif
	if (n->m_next == NULL) {
//#ifdef NOTIFICATION_DEBUG
//		Serial.println("n->m_next == NULL");
//#endif
		return;
	}
	if (n->m_next->m_next == NULL) {
//#ifdef NOTIFICATION_DEBUG
//		Serial.println("n->m_next->m_next == NULL");
//#endif
		// This is the last one
		delete n->m_next;
		n->m_next = NULL;
	} else {
		deleteLastNotification(n->m_next);
	}
};
NotificationInstance *Notification::findLastNotification(NotificationInstance *root) {
#ifdef NOTIFICATION_DEBUG
	Serial.println("Notification::findLastNotification...");
#endif
	if (root == NULL) {
		return NULL;
	}
	if (root->m_next == NULL) {
//#ifdef NOTIFICATION_DEBUG
//		Serial.println("n->m_next == NULL");
//#endif
		return root;
	}
	if (root->m_next->m_next == NULL) {
//#ifdef NOTIFICATION_DEBUG
//		Serial.println("n->m_next->m_next == NULL");
//#endif
		// This is the last one
		return root->m_next;
	} else {
		return findLastNotification(root->m_next);
	}
}

void Notification::display() {
}

Notification::~Notification() {
}

App *notification = new Notification();


